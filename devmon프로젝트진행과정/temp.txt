#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define NUM 6 //개발몬 숫자

typedef struct //개발몬 정보
{
    char* name;
    int iNum;
    char* pName;
    char* skpName;
    int hp, max_hp, mp, max_mp, power, sk_power;
}DevMon;
DevMon init_mon = { "0",-1 }; //변경 안할 값. 즉, 초기화 상수

typedef struct // 유저 정보
{
    char name[20];
    char pre_pos;
    int level, xp, hour;
    int xpos, ypos;
    int total_hp, max_hp;
    DevMon user_mon[4];
}UserInfo;

void ClearBuffer(void);

void PrintingMap(char map[25][25],UserInfo userS)
{
    int x = 0, y = 0;

    printf("-----------------------------------------------------------------\n");
    printf("이름:%s 체력:%d 시간:%d 레벨:%d 경험치:", userS.name, userS.total_hp, userS.hour, userS.level);
    for (x = 0;x < 10 - userS.xp / 50;x++) printf("O "); //경험치 구현( 50당 한칸)
    for (x = 0;x < userS.xp / 50;x++) printf("X ");
    printf("\n");
    printf("-----------------------------------------------------------------\n");

    for (x = 0; x < 25; x++)
    {
        for (y = 0; y < 25; y++)
        {
            if (map[x][y] == '0')
                printf(" 0 ");
            else if (map[x][y] == '1')
                printf(" 1 ");
            else if (map[x][y] == '2')
                printf(" 2 ");
            else if (map[x][y] == '3')
                printf(" 3 ");
            else if (map[x][y] == 'c')
                printf(" c ");
            else if (map[x][y] == 'd')
                printf(" d ");
            else if (map[x][y] == 'e')
                printf(" e ");
            else if (map[x][y] == 'h')
                printf(" h ");
            else if (map[x][y] == 'p')
                printf(" p ");
            else if (map[x][y] == 'q')
                printf(" q ");
            else if (map[x][y] == 'X')
                printf(" X ");
            else if (map[x][y] == 's')
                printf(" s ");
            else if (map[x][y] == 'i')
                printf(" i ");
            else if (map[x][y] == 'r')
                printf(" r ");
            else if (map[x][y] == 'f')
                printf(" f ");
        }
        printf("\n");
    }
}

//개발몬 수 세는 함수(배열 이름 입력받음)
int CountMon(DevMon* mon);

//mon 리스트 출력
void PrintingMon(DevMon* mon)
{
    for (int i = 0;i < CountMon(mon);i++) //개발몬 리스트 출력
    {
        printf("%d)", i + 1);
        printf("이름: %s 체력: %d 마나: %d ", mon[i].name, mon[i].hp, mon[i].mp);
        printf("공격력: %d 특수공격력: %d\n", mon[i].power, mon[i].sk_power);
    }
}

int main(void)
{
    srand((unsigned int)time(NULL));
    DevMon devmon[NUM + 1] = { {"수비니",0,"코드검사","과제내주기"},{"승버미",1,"코드공격","무한질문"},{"광서니",2,"교재로후려치기","기습질문"},{"뀨비",3,"무한질문","뀨등어소환"},{"보노보노",4,"변수공격","구조체포인터던지기"},{"시츄",5,"귀펄럭이기","물어뜯기"},init_mon }; //맨 끝 버퍼
    UserInfo userS = { "",'s',1,0,0,0,16,0,0,{ init_mon,init_mon,init_mon,init_mon } };
    int idx[3] = { -1,-2,-3 };
    int choose = 0, i = 0;
    char user[2];

    char map[25][25] =
    {
    {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', 's', '1', '1', '1', '1', '1', '1', '1', '1'}, //1은 벽
    {'1', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', '1', '0', '0', '0', '1', 'd', 'd', 'd', 'd', 'd', '1'}, //0은 복도
    {'1', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', '1', '0', '0', '0', '1', 'd', 'd', 'd', 'd', 'd', '1'}, //c가 교실 - 생산
    {'1', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', '2', '0', '0', '0', '1', 'd', 'd', 'd', 'd', 'd', '1'}, //d가 교실 - 드론
    {'1', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', '1', '0', '0', '0', '1', 'd', 'd', 'd', 'd', 'd', '1'}, //e가 교실 - iot
    {'1', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'c', '1', '0', '0', '0', '1', 'd', 'd', 'd', 'd', 'd', '1'}, //h가 급식실
    {'1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '2', '1', '1', '1', '0', '0', '0', '2', 'd', 'd', 'd', 'd', 'd', '1'}, //p가 교수실
    {'1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'd', 'd', 'd', 'd', 'd', '1'}, //2이 일반문
    {'1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'd', 'd', 'd', 'd', 'd', '1'}, //3가 교수실 문
    {'1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'd', 'd', 'd', 'd', 'd', '1'}, //q가 구급차
    {'1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'd', 'd', 'd', 'd', 'd', '1'}, //s가 시작위치
    {'1', 'h', 'h', 'h', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'd', 'd', 'd', 'd', 'd', '1'},
    {'1', 'h', 'q', 'h', '2', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '2', 'd', 'd', 'd', 'd', 'd', '1'},
    {'1', 'h', 'h', 'h', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'd', 'd', 'd', 'd', 'd', '1'},
    {'1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1'},
    {'1', '0', '0', '0', '0', '0', '0', '1', '1', '2', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1'},
    {'1', '0', '0', '0', '0', '0', '0', '1', 'e', 'e', 'e', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1'},
    {'1', '0', '0', '0', '0', '0', '0', '1', 'e', 'e', 'e', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1'},
    {'1', '0', '0', '0', '0', '0', '0', '1', 'e', 'e', 'e', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1'},
    {'1', '1', '1', '1', '2', '1', '1', '1', 'e', 'e', 'e', '1', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1'},
    {'1', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '2', '0', '0', '0', '0', '0', '0', '0', '1', 'p', 'p', 'p', 'p', '1'},
    {'1', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '1', '0', '0', '0', '0', '0', '0', '0', '1', 'p', 'p', 'p', 'p', '1'},
    {'1', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '1', '0', '0', '0', '0', '0', '0', '0', '1', 'p', 'p', 'p', 'p', '1'},
    {'1', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', '1', '0', '0', '0', '0', '0', '0', '0', '3', 'p', 'p', 'p', 'p', '1'},
    {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}
    };

    //개발몬 스탯 초기화
    for (int i = 0;i < NUM;i++)
    {
        devmon[i].hp = rand() % 100 + 200; devmon[i].max_hp = devmon[i].hp; //최소 몇 최대 몇
        devmon[i].mp = rand() % 50 + 50; devmon[i].max_mp = devmon[i].mp;
        devmon[i].power = rand() % 40 + 50;
        devmon[i].sk_power = rand() % 50 + 50;
    }

    //초기 개발몬 선택
    for (int j = 0;j < 3;j++)
    {
        idx[j] = rand() % NUM;
        while (idx[j] == idx[j - 1] || idx[j] == idx[j - 2]) idx[j] = rand() % NUM;
    }
    while (choose!=1)
    {
        printf("%d)", i + 1);
        printf("이름: %s 체력: %d 마나: %d ", devmon[idx[i]].name, devmon[idx[i]].hp, devmon[idx[i]].mp);
        printf("공격력: %d 특수공격력: %d\n", devmon[idx[i]].power, devmon[idx[i]].sk_power);
        printf("%s를 선택하시겠습니까? (y/n)",devmon[idx[i]].name);
        fgets(user, sizeof(user), stdin);
        ClearBuffer();
        if (user[0] == 'y') choose = 1;
        else if (user[0] == 'n') i=(i+1)%3;
        else printf("잘못된 입력입니다. \n");
    }
    printf("%s와 함께합니다. 개발원에 입장합니다. \n",devmon[idx[i]].name);
    //유저몬 리스트에 추가 후 개발몬 리스트에서 제거
    userS.user_mon[0] = devmon[idx[i]];
    for (int j = idx[i];j < CountMon(devmon) - 1;j++) devmon[j] = devmon[j + 1]; devmon[CountMon(devmon) - 1] = init_mon;
    //유저 hp정보 갱신
    userS.total_hp = userS.user_mon[0].hp; userS.max_hp = userS.user_mon[0].max_hp;
    //유저 맵위치 지정
    map[userS.xpos][userS.ypos] = 'X';
    //맵 출력
    PrintingMap(map, userS);



	return 0;
}
//============================================================================================fuction
void ClearBuffer(void)
{
    while (getchar() != '\n');
}
int CountMon(DevMon* mon)
{
    int idx = 0;
    while (mon[idx].iNum != -1) idx++; //개발몬 수 세기
    return idx;
}